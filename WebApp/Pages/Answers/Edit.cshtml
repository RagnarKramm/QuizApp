@page
@model WebApp.Pages.Answers.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Answer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Answer!.AnswerText" class="control-label"></label>
                <input asp-for="Answer!.AnswerText" class="form-control" />
                <span asp-validation-for="Answer!.AnswerText" class="text-danger"></span>
            </div>
            @if (Model.CanBeCorrect || Model.Answer!.IsCorrect)
            {
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="Answer!.IsCorrect"/> @Html.DisplayNameFor(model => model.Answer!.IsCorrect)
                    </label>
                </div>
            }
            <input type="hidden" asp-for="Answer!.Id" />
            <div class="form-group">
                @if (!Model.CanBeCorrect && !Model.Answer!.IsCorrect)
                {
                    <input type="hidden" asp-for="Answer!.IsCorrect" value="false"/>
                }
                <input type="hidden" asp-for="Answer!.QuestionId" value="@Model.Answer!.QuestionId"/>
                <input type="submit" value="Save" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="/Questions/Edit" asp-route-id="@Model.Answer!.QuestionId">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
